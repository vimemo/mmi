# Setting `log` here with the address of 127.0.0.1 will have the effect
# of haproxy sending the udp log messages to its own rsyslog instance
# (which sits at `127.0.0.1`) at the `local0` facility including all
# logs that have a priority greater or equal to the specified log level
# log 127.0.0.1 local0 warning
# log /dev/log local2 info
global
  maxconn 4096
  lua-load /usr/local/etc/haproxy/parse_user.lua
  log /dev/log local2 info

defaults
  mode http
  log global
  option dontlognull
  option http-ignore-probes
  timeout client 150000
  timeout server 3600000
  timeout connect 15000
  stats enable
  stats refresh 30s
  stats auth admin:password
  stats uri /haproxy?stats

frontend http-in
  bind  *:5984
  acl has_cookie req.hdr(cookie) -m found
  declare capture request len 400000
  # http-request set-log-level silent if static
  http-request set-header x-medic-user %[lua.parseUser] if has_cookie
  http-request capture req.body id 0 # capture.req.hdr(0)
  http-request capture req.hdr(x-medic-service) len 200 # capture.req.hdr(1)
  http-request capture req.hdr(x-medic-user) len 200 # capture.req.hdr(2)
  capture response header Content-Length len 10 # capture.res.hdr(0)
  log-format "%ci,%ST,%[capture.req.method],%[capture.req.uri],%[capture.req.hdr(1)],%[capture.req.hdr(2)],%[capture.req.hdr(0)],%B,%Tr,%[capture.res.hdr(0)]"
  default_backend couch-backend

frontend http-in2
  bind  *:5986
  default_backend couch-backend2

backend couch-backend
  balance roundrobin
  server couchdb1 couchdb:5984

backend couch-backend2
  balance roundrobin
  server couchdb1 couchdb:5986
