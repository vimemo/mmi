#!/bin/bash -eu

echo "[$0] Fetching users..."

COUCH_URL="http://admin:pass@localhost:5984"

users=$(curl ${COUCH_URL}/_users/_temp_view -X POST --data "{\"map\": \"function(doc) { if(doc.type === 'user') emit(doc.name); }\"}" -H "Content-Type: application/json" | jq --raw-output .rows[].key)

for user in $users; do
	echo "[$0] user: $user"
	user_db_name="medic-user-${user}"

	echo "[$0]   Fetching place for this user..."
	medic_user_place_id="$(curl ${COUCH_URL}/medic/org.couchdb.user:${user} | jq .facility_id)"

	echo "[$0]   deleting existing database '${user_db_name}'..."
	curl -X DELETE "${COUCH_URL}/${user_db_name}"

	echo "[$0]   creating new database '${user_db_name}'..."
	curl -X PUT "${COUCH_URL}/${user_db_name}"

	echo "[$0]   starting replication..."
	curl -X POST "${COUCH_URL}/_replicate?id=${medic_user_place_id}" --data '{"source":"medic", "target":"'${user_db_name}'", "continuous":true, "filter":"erlang_filters/doc_by_place"}' -H "Content-Type: application/json"
	curl -X POST "${COUCH_URL}/_replicate" --data '{"target":"medic", "source":"'${user_db_name}'", "continuous":true}' -H "Content-Type: application/json"
done
echo "[$0] To stop replication, bounce couch:"
echo "[$0]"
echo "[$0] Enjoy your day :-)"
